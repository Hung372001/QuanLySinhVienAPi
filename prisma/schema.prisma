datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                 String          @id @default(auto()) @map("_id") @db.ObjectId
    userName           String          @unique
    Permission         Permission?     @relation(fields: [permissionCode], references: [Ma])
    permissionCode     String
    hashedPassword     String          @unique
    email              String          @unique
    sex                String
    Date               String
    Address            String
    numberPhone        String          @unique
    fullName           String
    avatar             String          @default("")
    Class              Class?          @relation(fields: [className], references: [name])
    className          String          @default("")
    SubjectTeacher     SubjectTeacher? @relation(fields: [subjectTeacherName], references: [name])
    subjectTeacherName String?         @default("")
    Score              Score[]
    scheduleId         String?         @db.ObjectId
}

model Permission {
    id      String    @id @default(auto()) @map("_id") @db.ObjectId
    Ma      String    @unique
    Name    String    @unique
    Account Account[]
}

model Menu {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String @unique
    slug String @unique
}

model Class {
    id        String     @id @default(auto()) @map("_id") @db.ObjectId
    name      String     @unique
    student   Account[]
    ListClass ListClass? @relation(fields: [Khoi], references: [name])
    Khoi      String
    schedule  schedule?
}

model ListClass {
    id    String  @id @default(auto()) @map("_id") @db.ObjectId
    name  String  @unique
    class Class[]
}

model SubjectTeacher {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
    name     String    @unique
    teachers Account[]
}

model Day {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    name          String
    schedule      schedule?       @relation(fields: [scheduleId], references: [id])
    scheduleId    String?         @db.ObjectId
    subjectInDate subjectInDate[]
}

model Subject {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    name          String          @unique
    Khoi          String
    subjectInDate subjectInDate[]
    Score         Score[]
}

model subjectInDate {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    Subject     Subject? @relation(fields: [subjectName], references: [name])
    subjectName String?
    time        String   @default("")
    Day         Day?     @relation(fields: [dayId], references: [id])
    dayId       String?  @db.ObjectId
}

model schedule {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    name        String @unique
    scheduleDay Day[]
    class       Class  @relation(fields: [ClassName], references: [name])
    ClassName   String @unique
    semester    String @default("")
}

model Score {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    Score15m  String   @default("")
    Score45m  String   @default("")
    Score60m  String   @default("")
    semester  String   @default("")
    Account   Account? @relation(fields: [accountId], references: [id])
    accountId String?  @db.ObjectId

    Subject     Subject @relation(fields: [subjectName], references: [name])
    subjectName String
}

// model TeacherSchedule {
//     id String @id @default(auto()) @map("_id") @db.ObjectId
//     class  Class[]
// }
